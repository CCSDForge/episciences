name: PHPUnit Tests

# Run tests on pull requests and pushes to main branch
on:
  pull_request:
    branches: [ main, preprod, preprod-epi-manager, main-epi-manager, staging ]
    paths:
      - 'application/**'
      - 'library/**'
      - 'tests/**'
      - 'phpunit.xml'
      - 'composer.json'
      - 'composer.lock'
      - '.github/workflows/php-tests.yml'
  push:
    branches: [ main, preprod, preprod-epi-manager, main-epi-manager, staging ]
    paths:
      - 'application/**'
      - 'library/**'
      - 'tests/**'
      - 'phpunit.xml'
      - 'composer.json'
      - 'composer.lock'
      - '.github/workflows/php-tests.yml'

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2', '8.3']
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_episciences
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, pdo, zip
        coverage: xdebug
        tools: composer:v2
        
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
          
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
      
    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P3306 --silent; do
          sleep 1
        done
      
    - name: Setup test database
      run: |
        mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_episciences;"
        mysql -h 127.0.0.1 -P 3306 -u root -proot -e "CREATE DATABASE IF NOT EXISTS test_episciences_auth;"
        
    - name: Run PHPUnit tests
      run: vendor/bin/phpunit --coverage-clover=coverage.xml
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: root
        DB_PASSWORD: root
        DB_NAME: test_episciences
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      if: matrix.php-version == '8.2'
      with:
        file: ./coverage.xml
        flags: phpunit
        name: phpunit-coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        
    - name: Comment test results on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && matrix.php-version == '8.2'
      with:
        script: |
          const fs = require('fs');
          const path = './coverage.xml';
          
          if (fs.existsSync(path)) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… PHPUnit tests passed! Coverage report generated.'
            });
          }