name: Continuous Integration

on:
  pull_request:
    branches: [ main, preprod, preprod-epi-manager, main-epi-manager ]
  push:
    branches: [ main, preprod, preprod-epi-manager, main-epi-manager ]

jobs:
  # php-tests:
  #   name: PHP Tests (Disabled)
  #   runs-on: ubuntu-latest
  #   
  #   strategy:
  #     matrix:
  #       php-version: [8.1, 8.2]
  #       
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup PHP ${{ matrix.php-version }}
  #     uses: shivammathur/setup-php@v2
  #     with:
  #       php-version: ${{ matrix.php-version }}
  #       extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json
  #       coverage: xdebug
  #       
  #   - name: Cache Composer dependencies
  #     uses: actions/cache@v4
  #     with:
  #       path: /tmp/composer-cache
  #       key: ${{ runner.os }}-php${{ matrix.php-version }}-composer-${{ hashFiles('**/composer.lock') }}
  #       restore-keys: |
  #         ${{ runner.os }}-php${{ matrix.php-version }}-composer-
  #         
  #   - name: Install PHP dependencies
  #     run: composer install --no-progress --prefer-dist --optimize-autoloader
  #     
  #   - name: Run PHP tests
  #     run: |
  #       if [ -f "phpunit.xml" ]; then
  #         ./bin/phpunit --coverage-clover=coverage-php.xml
  #       else
  #         echo "No phpunit.xml found, skipping PHP tests"
  #       fi
  #       
  #   - name: Upload PHP coverage
  #     uses: codecov/codecov-action@v4
  #     if: matrix.php-version == '8.2'
  #     with:
  #       file: ./coverage-php.xml
  #       flags: php
  #       name: php-coverage
  #     env:
  #       CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  js-tests:
    name: JavaScript Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install JavaScript dependencies
      run: yarn install --frozen-lockfile
      
    - name: Run JavaScript tests
      run: yarn test --coverage --watchAll=false --verbose
      
    - name: Upload JavaScript coverage
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: javascript
        name: javascript-coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  integration:
    name: Integration Status
    runs-on: ubuntu-latest
    needs: [js-tests]
    if: always()
    
    steps:
    - name: Check test results
      run: |
        if [[ "${{ needs.js-tests.result }}" == "success" ]]; then
          echo "‚úÖ JavaScript tests passed!"
          exit 0
        else
          echo "‚ùå JavaScript tests failed: ${{ needs.js-tests.result }}"
          exit 1
        fi
        
    - name: Comment on PR
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request'
      with:
        script: |
          const jsResult = '${{ needs.js-tests.result }}';
          
          let message = '## Test Results\n\n';
          message += 'üö´ PHP Tests: Disabled\n';
          message += jsResult === 'success' ? '‚úÖ JavaScript Tests: Passed\n' : '‚ùå JavaScript Tests: Failed\n';
          
          if (jsResult === 'success') {
            message += '\nüéâ JavaScript tests are passing! Ready to merge.';
          } else {
            message += '\nüîç Please check the failed JavaScript tests before merging.';
          }
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });